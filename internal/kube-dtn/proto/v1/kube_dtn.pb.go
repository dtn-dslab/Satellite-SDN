// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: proto/v1/kube_dtn.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Pod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// IP of the node on which the pod is running.
	SrcIp  string  `protobuf:"bytes,2,opt,name=src_ip,json=srcIp,proto3" json:"src_ip,omitempty"`
	NetNs  string  `protobuf:"bytes,3,opt,name=net_ns,json=netNs,proto3" json:"net_ns,omitempty"`
	KubeNs string  `protobuf:"bytes,4,opt,name=kube_ns,json=kubeNs,proto3" json:"kube_ns,omitempty"`
	Links  []*Link `protobuf:"bytes,5,rep,name=links,proto3" json:"links,omitempty"`
}

func (x *Pod) Reset() {
	*x = Pod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_kube_dtn_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pod) ProtoMessage() {}

func (x *Pod) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_kube_dtn_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pod.ProtoReflect.Descriptor instead.
func (*Pod) Descriptor() ([]byte, []int) {
	return file_proto_v1_kube_dtn_proto_rawDescGZIP(), []int{0}
}

func (x *Pod) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Pod) GetSrcIp() string {
	if x != nil {
		return x.SrcIp
	}
	return ""
}

func (x *Pod) GetNetNs() string {
	if x != nil {
		return x.NetNs
	}
	return ""
}

func (x *Pod) GetKubeNs() string {
	if x != nil {
		return x.KubeNs
	}
	return ""
}

func (x *Pod) GetLinks() []*Link {
	if x != nil {
		return x.Links
	}
	return nil
}

type Link struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerPod    string          `protobuf:"bytes,1,opt,name=peer_pod,json=peerPod,proto3" json:"peer_pod,omitempty"`
	LocalIntf  string          `protobuf:"bytes,2,opt,name=local_intf,json=localIntf,proto3" json:"local_intf,omitempty"`
	PeerIntf   string          `protobuf:"bytes,3,opt,name=peer_intf,json=peerIntf,proto3" json:"peer_intf,omitempty"`
	LocalIp    string          `protobuf:"bytes,4,opt,name=local_ip,json=localIp,proto3" json:"local_ip,omitempty"`
	PeerIp     string          `protobuf:"bytes,5,opt,name=peer_ip,json=peerIp,proto3" json:"peer_ip,omitempty"`
	Uid        int64           `protobuf:"varint,6,opt,name=uid,proto3" json:"uid,omitempty"`
	Properties *LinkProperties `protobuf:"bytes,7,opt,name=properties,proto3" json:"properties,omitempty"`
	LocalMac   string          `protobuf:"bytes,8,opt,name=local_mac,json=localMac,proto3" json:"local_mac,omitempty"`
	PeerMac    string          `protobuf:"bytes,9,opt,name=peer_mac,json=peerMac,proto3" json:"peer_mac,omitempty"`
}

func (x *Link) Reset() {
	*x = Link{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_kube_dtn_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Link) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Link) ProtoMessage() {}

func (x *Link) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_kube_dtn_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Link.ProtoReflect.Descriptor instead.
func (*Link) Descriptor() ([]byte, []int) {
	return file_proto_v1_kube_dtn_proto_rawDescGZIP(), []int{1}
}

func (x *Link) GetPeerPod() string {
	if x != nil {
		return x.PeerPod
	}
	return ""
}

func (x *Link) GetLocalIntf() string {
	if x != nil {
		return x.LocalIntf
	}
	return ""
}

func (x *Link) GetPeerIntf() string {
	if x != nil {
		return x.PeerIntf
	}
	return ""
}

func (x *Link) GetLocalIp() string {
	if x != nil {
		return x.LocalIp
	}
	return ""
}

func (x *Link) GetPeerIp() string {
	if x != nil {
		return x.PeerIp
	}
	return ""
}

func (x *Link) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *Link) GetProperties() *LinkProperties {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *Link) GetLocalMac() string {
	if x != nil {
		return x.LocalMac
	}
	return ""
}

func (x *Link) GetPeerMac() string {
	if x != nil {
		return x.PeerMac
	}
	return ""
}

type LinkProperties struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Latency       string `protobuf:"bytes,1,opt,name=latency,proto3" json:"latency,omitempty"`
	LatencyCorr   string `protobuf:"bytes,2,opt,name=latency_corr,json=latencyCorr,proto3" json:"latency_corr,omitempty"`
	Jitter        string `protobuf:"bytes,3,opt,name=jitter,proto3" json:"jitter,omitempty"`
	Loss          string `protobuf:"bytes,4,opt,name=loss,proto3" json:"loss,omitempty"`
	LossCorr      string `protobuf:"bytes,5,opt,name=loss_corr,json=lossCorr,proto3" json:"loss_corr,omitempty"`
	Rate          string `protobuf:"bytes,6,opt,name=rate,proto3" json:"rate,omitempty"`
	Gap           uint32 `protobuf:"varint,7,opt,name=gap,proto3" json:"gap,omitempty"`
	Duplicate     string `protobuf:"bytes,8,opt,name=duplicate,proto3" json:"duplicate,omitempty"`
	DuplicateCorr string `protobuf:"bytes,9,opt,name=duplicate_corr,json=duplicateCorr,proto3" json:"duplicate_corr,omitempty"`
	ReorderProb   string `protobuf:"bytes,10,opt,name=reorder_prob,json=reorderProb,proto3" json:"reorder_prob,omitempty"`
	ReorderCorr   string `protobuf:"bytes,11,opt,name=reorder_corr,json=reorderCorr,proto3" json:"reorder_corr,omitempty"`
	CorruptProb   string `protobuf:"bytes,12,opt,name=corrupt_prob,json=corruptProb,proto3" json:"corrupt_prob,omitempty"`
	CorruptCorr   string `protobuf:"bytes,13,opt,name=corrupt_corr,json=corruptCorr,proto3" json:"corrupt_corr,omitempty"`
}

func (x *LinkProperties) Reset() {
	*x = LinkProperties{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_kube_dtn_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkProperties) ProtoMessage() {}

func (x *LinkProperties) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_kube_dtn_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkProperties.ProtoReflect.Descriptor instead.
func (*LinkProperties) Descriptor() ([]byte, []int) {
	return file_proto_v1_kube_dtn_proto_rawDescGZIP(), []int{2}
}

func (x *LinkProperties) GetLatency() string {
	if x != nil {
		return x.Latency
	}
	return ""
}

func (x *LinkProperties) GetLatencyCorr() string {
	if x != nil {
		return x.LatencyCorr
	}
	return ""
}

func (x *LinkProperties) GetJitter() string {
	if x != nil {
		return x.Jitter
	}
	return ""
}

func (x *LinkProperties) GetLoss() string {
	if x != nil {
		return x.Loss
	}
	return ""
}

func (x *LinkProperties) GetLossCorr() string {
	if x != nil {
		return x.LossCorr
	}
	return ""
}

func (x *LinkProperties) GetRate() string {
	if x != nil {
		return x.Rate
	}
	return ""
}

func (x *LinkProperties) GetGap() uint32 {
	if x != nil {
		return x.Gap
	}
	return 0
}

func (x *LinkProperties) GetDuplicate() string {
	if x != nil {
		return x.Duplicate
	}
	return ""
}

func (x *LinkProperties) GetDuplicateCorr() string {
	if x != nil {
		return x.DuplicateCorr
	}
	return ""
}

func (x *LinkProperties) GetReorderProb() string {
	if x != nil {
		return x.ReorderProb
	}
	return ""
}

func (x *LinkProperties) GetReorderCorr() string {
	if x != nil {
		return x.ReorderCorr
	}
	return ""
}

func (x *LinkProperties) GetCorruptProb() string {
	if x != nil {
		return x.CorruptProb
	}
	return ""
}

func (x *LinkProperties) GetCorruptCorr() string {
	if x != nil {
		return x.CorruptCorr
	}
	return ""
}

type PodQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	KubeNs string `protobuf:"bytes,2,opt,name=kube_ns,json=kubeNs,proto3" json:"kube_ns,omitempty"`
}

func (x *PodQuery) Reset() {
	*x = PodQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_kube_dtn_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PodQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PodQuery) ProtoMessage() {}

func (x *PodQuery) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_kube_dtn_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PodQuery.ProtoReflect.Descriptor instead.
func (*PodQuery) Descriptor() ([]byte, []int) {
	return file_proto_v1_kube_dtn_proto_rawDescGZIP(), []int{3}
}

func (x *PodQuery) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PodQuery) GetKubeNs() string {
	if x != nil {
		return x.KubeNs
	}
	return ""
}

type LinksBatchQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocalPod *Pod    `protobuf:"bytes,1,opt,name=local_pod,json=localPod,proto3" json:"local_pod,omitempty"`
	Links    []*Link `protobuf:"bytes,2,rep,name=links,proto3" json:"links,omitempty"`
}

func (x *LinksBatchQuery) Reset() {
	*x = LinksBatchQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_kube_dtn_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinksBatchQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinksBatchQuery) ProtoMessage() {}

func (x *LinksBatchQuery) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_kube_dtn_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinksBatchQuery.ProtoReflect.Descriptor instead.
func (*LinksBatchQuery) Descriptor() ([]byte, []int) {
	return file_proto_v1_kube_dtn_proto_rawDescGZIP(), []int{4}
}

func (x *LinksBatchQuery) GetLocalPod() *Pod {
	if x != nil {
		return x.LocalPod
	}
	return nil
}

func (x *LinksBatchQuery) GetLinks() []*Link {
	if x != nil {
		return x.Links
	}
	return nil
}

type SetupPodQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	KubeNs string `protobuf:"bytes,2,opt,name=kube_ns,json=kubeNs,proto3" json:"kube_ns,omitempty"`
	NetNs  string `protobuf:"bytes,3,opt,name=net_ns,json=netNs,proto3" json:"net_ns,omitempty"`
}

func (x *SetupPodQuery) Reset() {
	*x = SetupPodQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_kube_dtn_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetupPodQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetupPodQuery) ProtoMessage() {}

func (x *SetupPodQuery) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_kube_dtn_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetupPodQuery.ProtoReflect.Descriptor instead.
func (*SetupPodQuery) Descriptor() ([]byte, []int) {
	return file_proto_v1_kube_dtn_proto_rawDescGZIP(), []int{5}
}

func (x *SetupPodQuery) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SetupPodQuery) GetKubeNs() string {
	if x != nil {
		return x.KubeNs
	}
	return ""
}

func (x *SetupPodQuery) GetNetNs() string {
	if x != nil {
		return x.NetNs
	}
	return ""
}

type BoolResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response bool `protobuf:"varint,1,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *BoolResponse) Reset() {
	*x = BoolResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_kube_dtn_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoolResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoolResponse) ProtoMessage() {}

func (x *BoolResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_kube_dtn_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoolResponse.ProtoReflect.Descriptor instead.
func (*BoolResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_kube_dtn_proto_rawDescGZIP(), []int{6}
}

func (x *BoolResponse) GetResponse() bool {
	if x != nil {
		return x.Response
	}
	return false
}

type RemotePod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Network namespace to setup interface in
	NetNs string `protobuf:"bytes,1,opt,name=net_ns,json=netNs,proto3" json:"net_ns,omitempty"`
	// Interface name to update
	IntfName string `protobuf:"bytes,2,opt,name=intf_name,json=intfName,proto3" json:"intf_name,omitempty"`
	// IP to update
	IntfIp string `protobuf:"bytes,3,opt,name=intf_ip,json=intfIp,proto3" json:"intf_ip,omitempty"`
	// VTEP of VXLAN peer
	PeerVtep   string          `protobuf:"bytes,4,opt,name=peer_vtep,json=peerVtep,proto3" json:"peer_vtep,omitempty"`
	KubeNs     string          `protobuf:"bytes,5,opt,name=kube_ns,json=kubeNs,proto3" json:"kube_ns,omitempty"`
	Vni        int32           `protobuf:"varint,6,opt,name=vni,proto3" json:"vni,omitempty"`
	Properties *LinkProperties `protobuf:"bytes,7,opt,name=properties,proto3" json:"properties,omitempty"`
	// Pod name
	Name string `protobuf:"bytes,8,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *RemotePod) Reset() {
	*x = RemotePod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_kube_dtn_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemotePod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemotePod) ProtoMessage() {}

func (x *RemotePod) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_kube_dtn_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemotePod.ProtoReflect.Descriptor instead.
func (*RemotePod) Descriptor() ([]byte, []int) {
	return file_proto_v1_kube_dtn_proto_rawDescGZIP(), []int{7}
}

func (x *RemotePod) GetNetNs() string {
	if x != nil {
		return x.NetNs
	}
	return ""
}

func (x *RemotePod) GetIntfName() string {
	if x != nil {
		return x.IntfName
	}
	return ""
}

func (x *RemotePod) GetIntfIp() string {
	if x != nil {
		return x.IntfIp
	}
	return ""
}

func (x *RemotePod) GetPeerVtep() string {
	if x != nil {
		return x.PeerVtep
	}
	return ""
}

func (x *RemotePod) GetKubeNs() string {
	if x != nil {
		return x.KubeNs
	}
	return ""
}

func (x *RemotePod) GetVni() int32 {
	if x != nil {
		return x.Vni
	}
	return 0
}

func (x *RemotePod) GetProperties() *LinkProperties {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *RemotePod) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// The proto describes both end of a grpc-wire, the local end and the remote
// end.
type WireDef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The remote machine interface id, to which this wire is connected to.
	//
	//	When local machine sends a packet to remote mahcine over grpc-wire,
	//	then along with the packet data, local machine also sends the interface id
	//	to whihc this packet needs to delivered in remote machine. It avoids any
	//	per packet interface lookup at the remote end. Packet delivery becomes
	//	an O(1) operation at remote end.
	PeerIntfId int64 `protobuf:"varint,1,opt,name=peer_intf_id,json=peerIntfId,proto3" json:"peer_intf_id,omitempty"`
	// The remote machine interface IP, to which this grpc wire is connected to.
	PeerIp string `protobuf:"bytes,2,opt,name=peer_ip,json=peerIp,proto3" json:"peer_ip,omitempty"`
	// Interface name, which comes from topology definition and to be put
	// inside container.
	// This filed is used when grpc-wire to be created.
	IntfNameInPod string `protobuf:"bytes,3,opt,name=intf_name_in_pod,json=intfNameInPod,proto3" json:"intf_name_in_pod,omitempty"`
	// Network name space of the local pod which is connected to this
	// grpc-wire
	LocalPodNetNs string `protobuf:"bytes,4,opt,name=local_pod_net_ns,json=localPodNetNs,proto3" json:"local_pod_net_ns,omitempty"`
	// Each link has a uid.
	LinkUid int64 `protobuf:"varint,5,opt,name=link_uid,json=linkUid,proto3" json:"link_uid,omitempty"`
	// Name of the local pod where this wire is getting added.
	LocalPodName string `protobuf:"bytes,6,opt,name=local_pod_name,json=localPodName,proto3" json:"local_pod_name,omitempty"`
	// Every interface insdie a pod is one end of a veth pair. The other end of
	// the veth pair is with the local node. This is the name of  veth end, which
	// is with the node. Packets coming from the pod will be picked up from this
	// veth end and will be transported to the remote node over grpc wire.
	VethNameLocalHost string `protobuf:"bytes,7,opt,name=veth_name_local_host,json=vethNameLocalHost,proto3" json:"veth_name_local_host,omitempty"`
	KubeNs            string `protobuf:"bytes,8,opt,name=kube_ns,json=kubeNs,proto3" json:"kube_ns,omitempty"`
	LocalPodIp        string `protobuf:"bytes,9,opt,name=local_pod_ip,json=localPodIp,proto3" json:"local_pod_ip,omitempty"`
}

func (x *WireDef) Reset() {
	*x = WireDef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_kube_dtn_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WireDef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WireDef) ProtoMessage() {}

func (x *WireDef) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_kube_dtn_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WireDef.ProtoReflect.Descriptor instead.
func (*WireDef) Descriptor() ([]byte, []int) {
	return file_proto_v1_kube_dtn_proto_rawDescGZIP(), []int{8}
}

func (x *WireDef) GetPeerIntfId() int64 {
	if x != nil {
		return x.PeerIntfId
	}
	return 0
}

func (x *WireDef) GetPeerIp() string {
	if x != nil {
		return x.PeerIp
	}
	return ""
}

func (x *WireDef) GetIntfNameInPod() string {
	if x != nil {
		return x.IntfNameInPod
	}
	return ""
}

func (x *WireDef) GetLocalPodNetNs() string {
	if x != nil {
		return x.LocalPodNetNs
	}
	return ""
}

func (x *WireDef) GetLinkUid() int64 {
	if x != nil {
		return x.LinkUid
	}
	return 0
}

func (x *WireDef) GetLocalPodName() string {
	if x != nil {
		return x.LocalPodName
	}
	return ""
}

func (x *WireDef) GetVethNameLocalHost() string {
	if x != nil {
		return x.VethNameLocalHost
	}
	return ""
}

func (x *WireDef) GetKubeNs() string {
	if x != nil {
		return x.KubeNs
	}
	return ""
}

func (x *WireDef) GetLocalPodIp() string {
	if x != nil {
		return x.LocalPodIp
	}
	return ""
}

type WireCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response bool `protobuf:"varint,1,opt,name=response,proto3" json:"response,omitempty"`
	// the interface id, that was created.
	PeerIntfId int64 `protobuf:"varint,2,opt,name=peer_intf_id,json=peerIntfId,proto3" json:"peer_intf_id,omitempty"`
}

func (x *WireCreateResponse) Reset() {
	*x = WireCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_kube_dtn_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WireCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WireCreateResponse) ProtoMessage() {}

func (x *WireCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_kube_dtn_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WireCreateResponse.ProtoReflect.Descriptor instead.
func (*WireCreateResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_kube_dtn_proto_rawDescGZIP(), []int{9}
}

func (x *WireCreateResponse) GetResponse() bool {
	if x != nil {
		return x.Response
	}
	return false
}

func (x *WireCreateResponse) GetPeerIntfId() int64 {
	if x != nil {
		return x.PeerIntfId
	}
	return 0
}

type Packet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the remote machine interface id, to which this packet should be delivered.
	RemotIntfId int64  `protobuf:"varint,1,opt,name=remot_intf_id,json=remotIntfId,proto3" json:"remot_intf_id,omitempty"`
	Frame       []byte `protobuf:"bytes,2,opt,name=frame,proto3" json:"frame,omitempty"`
}

func (x *Packet) Reset() {
	*x = Packet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_kube_dtn_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Packet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Packet) ProtoMessage() {}

func (x *Packet) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_kube_dtn_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Packet.ProtoReflect.Descriptor instead.
func (*Packet) Descriptor() ([]byte, []int) {
	return file_proto_v1_kube_dtn_proto_rawDescGZIP(), []int{10}
}

func (x *Packet) GetRemotIntfId() int64 {
	if x != nil {
		return x.RemotIntfId
	}
	return 0
}

func (x *Packet) GetFrame() []byte {
	if x != nil {
		return x.Frame
	}
	return nil
}

type GenerateNodeInterfaceNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PodIntfName string `protobuf:"bytes,1,opt,name=pod_intf_name,json=podIntfName,proto3" json:"pod_intf_name,omitempty"`
	PodName     string `protobuf:"bytes,2,opt,name=pod_name,json=podName,proto3" json:"pod_name,omitempty"`
}

func (x *GenerateNodeInterfaceNameRequest) Reset() {
	*x = GenerateNodeInterfaceNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_kube_dtn_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateNodeInterfaceNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateNodeInterfaceNameRequest) ProtoMessage() {}

func (x *GenerateNodeInterfaceNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_kube_dtn_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateNodeInterfaceNameRequest.ProtoReflect.Descriptor instead.
func (*GenerateNodeInterfaceNameRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_kube_dtn_proto_rawDescGZIP(), []int{11}
}

func (x *GenerateNodeInterfaceNameRequest) GetPodIntfName() string {
	if x != nil {
		return x.PodIntfName
	}
	return ""
}

func (x *GenerateNodeInterfaceNameRequest) GetPodName() string {
	if x != nil {
		return x.PodName
	}
	return ""
}

type GenerateNodeInterfaceNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok           bool   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	NodeIntfName string `protobuf:"bytes,2,opt,name=node_intf_name,json=nodeIntfName,proto3" json:"node_intf_name,omitempty"`
}

func (x *GenerateNodeInterfaceNameResponse) Reset() {
	*x = GenerateNodeInterfaceNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_kube_dtn_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateNodeInterfaceNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateNodeInterfaceNameResponse) ProtoMessage() {}

func (x *GenerateNodeInterfaceNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_kube_dtn_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateNodeInterfaceNameResponse.ProtoReflect.Descriptor instead.
func (*GenerateNodeInterfaceNameResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_kube_dtn_proto_rawDescGZIP(), []int{12}
}

func (x *GenerateNodeInterfaceNameResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *GenerateNodeInterfaceNameResponse) GetNodeIntfName() string {
	if x != nil {
		return x.NodeIntfName
	}
	return ""
}

var File_proto_v1_kube_dtn_proto protoreflect.FileDescriptor

var file_proto_v1_kube_dtn_proto_rawDesc = []byte{
	0x0a, 0x17, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x6b, 0x75, 0x62, 0x65, 0x5f,
	0x64, 0x74, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x76, 0x31, 0x22, 0x86, 0x01, 0x0a, 0x03, 0x50, 0x6f, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x15, 0x0a, 0x06, 0x73, 0x72, 0x63, 0x5f, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x73, 0x72, 0x63, 0x49, 0x70, 0x12, 0x15, 0x0a, 0x06, 0x6e, 0x65, 0x74, 0x5f, 0x6e, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x65, 0x74, 0x4e, 0x73, 0x12, 0x17, 0x0a,
	0x07, 0x6b, 0x75, 0x62, 0x65, 0x5f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6b, 0x75, 0x62, 0x65, 0x4e, 0x73, 0x12, 0x24, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x22, 0x95, 0x02, 0x0a,
	0x04, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x70, 0x6f,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x65, 0x65, 0x72, 0x50, 0x6f, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x74, 0x66, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x6e, 0x74, 0x66, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x74, 0x66, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x65, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x66, 0x12, 0x19, 0x0a, 0x08,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x69, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x65, 0x65, 0x72, 0x5f,
	0x69, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x70,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x12, 0x38, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x6d, 0x61, 0x63, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x4d, 0x61, 0x63, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x65, 0x65,
	0x72, 0x5f, 0x6d, 0x61, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x65, 0x65,
	0x72, 0x4d, 0x61, 0x63, 0x22, 0x8d, 0x03, 0x0a, 0x0e, 0x4c, 0x69, 0x6e, 0x6b, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x61, 0x74, 0x65, 0x6e,
	0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63,
	0x79, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x63, 0x6f, 0x72,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79,
	0x43, 0x6f, 0x72, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6a, 0x69, 0x74, 0x74, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6a, 0x69, 0x74, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x6c, 0x6f, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x6f, 0x73, 0x73,
	0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x73, 0x73, 0x5f, 0x63, 0x6f, 0x72, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x73, 0x73, 0x43, 0x6f, 0x72, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x72, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x61, 0x74,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x61, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x67, 0x61, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x63,
	0x6f, 0x72, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x75, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x72, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x62, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x72, 0x65, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x62, 0x12, 0x21, 0x0a, 0x0c, 0x72,
	0x65, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x72, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x72, 0x65, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x72, 0x72, 0x12, 0x21,
	0x0a, 0x0c, 0x63, 0x6f, 0x72, 0x72, 0x75, 0x70, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x62, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x72, 0x72, 0x75, 0x70, 0x74, 0x50, 0x72, 0x6f,
	0x62, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x72, 0x72, 0x75, 0x70, 0x74, 0x5f, 0x63, 0x6f, 0x72,
	0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x72, 0x72, 0x75, 0x70, 0x74,
	0x43, 0x6f, 0x72, 0x72, 0x22, 0x37, 0x0a, 0x08, 0x50, 0x6f, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6b, 0x75, 0x62, 0x65, 0x5f, 0x6e, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6b, 0x75, 0x62, 0x65, 0x4e, 0x73, 0x22, 0x63, 0x0a,
	0x0f, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x42, 0x61, 0x74, 0x63, 0x68, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x12, 0x2a, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x70, 0x6f, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x6f, 0x64, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x50, 0x6f, 0x64, 0x12, 0x24, 0x0a, 0x05,
	0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x05, 0x6c, 0x69, 0x6e,
	0x6b, 0x73, 0x22, 0x53, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x75, 0x70, 0x50, 0x6f, 0x64, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6b, 0x75, 0x62, 0x65, 0x5f,
	0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6b, 0x75, 0x62, 0x65, 0x4e, 0x73,
	0x12, 0x15, 0x0a, 0x06, 0x6e, 0x65, 0x74, 0x5f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6e, 0x65, 0x74, 0x4e, 0x73, 0x22, 0x2a, 0x0a, 0x0c, 0x42, 0x6f, 0x6f, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0xee, 0x01, 0x0a, 0x09, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x50, 0x6f,
	0x64, 0x12, 0x15, 0x0a, 0x06, 0x6e, 0x65, 0x74, 0x5f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6e, 0x65, 0x74, 0x4e, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x66,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x74,
	0x66, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x6e, 0x74, 0x66, 0x5f, 0x69, 0x70,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6e, 0x74, 0x66, 0x49, 0x70, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x76, 0x74, 0x65, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x65, 0x65, 0x72, 0x56, 0x74, 0x65, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x6b,
	0x75, 0x62, 0x65, 0x5f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6b, 0x75,
	0x62, 0x65, 0x4e, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x6e, 0x69, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x76, 0x6e, 0x69, 0x12, 0x38, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x69, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x69, 0x65, 0x73, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0xc3, 0x02, 0x0a, 0x07, 0x57, 0x69, 0x72, 0x65, 0x44, 0x65, 0x66,
	0x12, 0x20, 0x0a, 0x0c, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x74, 0x66, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x65, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x66,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x69, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x70, 0x12, 0x27, 0x0a, 0x10, 0x69,
	0x6e, 0x74, 0x66, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x70, 0x6f, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x49,
	0x6e, 0x50, 0x6f, 0x64, 0x12, 0x27, 0x0a, 0x10, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x70, 0x6f,
	0x64, 0x5f, 0x6e, 0x65, 0x74, 0x5f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x50, 0x6f, 0x64, 0x4e, 0x65, 0x74, 0x4e, 0x73, 0x12, 0x19, 0x0a,
	0x08, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x6c, 0x69, 0x6e, 0x6b, 0x55, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x5f, 0x70, 0x6f, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x50, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2f,
	0x0a, 0x14, 0x76, 0x65, 0x74, 0x68, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x76, 0x65,
	0x74, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x48, 0x6f, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x6b, 0x75, 0x62, 0x65, 0x5f, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6b, 0x75, 0x62, 0x65, 0x4e, 0x73, 0x12, 0x20, 0x0a, 0x0c, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x5f, 0x70, 0x6f, 0x64, 0x5f, 0x69, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x50, 0x6f, 0x64, 0x49, 0x70, 0x22, 0x52, 0x0a, 0x12, 0x57, 0x69,
	0x72, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0c,
	0x70, 0x65, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x74, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x70, 0x65, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x22, 0x42,
	0x0a, 0x06, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x72, 0x65, 0x6d, 0x6f,
	0x74, 0x5f, 0x69, 0x6e, 0x74, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x49, 0x6e, 0x74, 0x66, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x66, 0x72, 0x61,
	0x6d, 0x65, 0x22, 0x61, 0x0a, 0x20, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4e, 0x6f,
	0x64, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x70, 0x6f, 0x64, 0x5f, 0x69, 0x6e,
	0x74, 0x66, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70,
	0x6f, 0x64, 0x49, 0x6e, 0x74, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x6f,
	0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x6f,
	0x64, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x59, 0x0a, 0x21, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x24, 0x0a, 0x0e, 0x6e, 0x6f,
	0x64, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x66, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x74, 0x66, 0x4e, 0x61, 0x6d, 0x65,
	0x32, 0xcd, 0x05, 0x0a, 0x05, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x12, 0x28, 0x0a, 0x03, 0x47, 0x65,
	0x74, 0x12, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x64,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x6f, 0x64, 0x12, 0x31, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x41, 0x6c, 0x69, 0x76, 0x65,
	0x12, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x64, 0x1a,
	0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x4c, 0x69,
	0x6e, 0x6b, 0x73, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x6e, 0x6b, 0x73, 0x42, 0x61, 0x74, 0x63, 0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x16,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x08, 0x44, 0x65, 0x6c, 0x4c, 0x69, 0x6e,
	0x6b, 0x73, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x6e, 0x6b, 0x73, 0x42, 0x61, 0x74, 0x63, 0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x16, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c,
	0x69, 0x6e, 0x6b, 0x73, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x42, 0x61, 0x74, 0x63, 0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a,
	0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x75, 0x70,
	0x50, 0x6f, 0x64, 0x12, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x65, 0x74, 0x75, 0x70, 0x50, 0x6f, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x16, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x0a, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x50,
	0x6f, 0x64, 0x12, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f,
	0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76,
	0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41,
	0x0a, 0x0e, 0x47, 0x52, 0x50, 0x43, 0x57, 0x69, 0x72, 0x65, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73,
	0x12, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x69, 0x72, 0x65,
	0x44, 0x65, 0x66, 0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x57,
	0x69, 0x72, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3d, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x47, 0x52, 0x50, 0x43, 0x57, 0x69, 0x72, 0x65,
	0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x12, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x57, 0x69, 0x72, 0x65, 0x44, 0x65, 0x66, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x38, 0x0a, 0x0b, 0x52, 0x65, 0x6d, 0x47, 0x52, 0x50, 0x43, 0x57, 0x69, 0x72, 0x65, 0x12,
	0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x69, 0x72, 0x65, 0x44,
	0x65, 0x66, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f,
	0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x74, 0x0a, 0x19, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x32, 0x85, 0x01, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x12, 0x35, 0x0a, 0x06, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x50, 0x6f, 0x64, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x44, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x47, 0x52, 0x50, 0x43, 0x57, 0x69, 0x72,
	0x65, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x12, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x57, 0x69, 0x72, 0x65, 0x44, 0x65, 0x66, 0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x69, 0x72, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x82, 0x01, 0x0a, 0x0c, 0x57, 0x69, 0x72,
	0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x36, 0x0a, 0x0a, 0x53, 0x65, 0x6e,
	0x64, 0x54, 0x6f, 0x4f, 0x6e, 0x63, 0x65, 0x12, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3a, 0x0a, 0x0c, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x12, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x42, 0x20, 0x5a,
	0x1e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x2d, 0x79, 0x6f,
	0x75, 0x6e, 0x67, 0x2f, 0x6b, 0x75, 0x62, 0x65, 0x2d, 0x64, 0x74, 0x6e, 0x2f, 0x76, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_v1_kube_dtn_proto_rawDescOnce sync.Once
	file_proto_v1_kube_dtn_proto_rawDescData = file_proto_v1_kube_dtn_proto_rawDesc
)

func file_proto_v1_kube_dtn_proto_rawDescGZIP() []byte {
	file_proto_v1_kube_dtn_proto_rawDescOnce.Do(func() {
		file_proto_v1_kube_dtn_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_v1_kube_dtn_proto_rawDescData)
	})
	return file_proto_v1_kube_dtn_proto_rawDescData
}

var file_proto_v1_kube_dtn_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_proto_v1_kube_dtn_proto_goTypes = []interface{}{
	(*Pod)(nil),                               // 0: proto.v1.Pod
	(*Link)(nil),                              // 1: proto.v1.Link
	(*LinkProperties)(nil),                    // 2: proto.v1.LinkProperties
	(*PodQuery)(nil),                          // 3: proto.v1.PodQuery
	(*LinksBatchQuery)(nil),                   // 4: proto.v1.LinksBatchQuery
	(*SetupPodQuery)(nil),                     // 5: proto.v1.SetupPodQuery
	(*BoolResponse)(nil),                      // 6: proto.v1.BoolResponse
	(*RemotePod)(nil),                         // 7: proto.v1.RemotePod
	(*WireDef)(nil),                           // 8: proto.v1.WireDef
	(*WireCreateResponse)(nil),                // 9: proto.v1.WireCreateResponse
	(*Packet)(nil),                            // 10: proto.v1.Packet
	(*GenerateNodeInterfaceNameRequest)(nil),  // 11: proto.v1.GenerateNodeInterfaceNameRequest
	(*GenerateNodeInterfaceNameResponse)(nil), // 12: proto.v1.GenerateNodeInterfaceNameResponse
}
var file_proto_v1_kube_dtn_proto_depIdxs = []int32{
	1,  // 0: proto.v1.Pod.links:type_name -> proto.v1.Link
	2,  // 1: proto.v1.Link.properties:type_name -> proto.v1.LinkProperties
	0,  // 2: proto.v1.LinksBatchQuery.local_pod:type_name -> proto.v1.Pod
	1,  // 3: proto.v1.LinksBatchQuery.links:type_name -> proto.v1.Link
	2,  // 4: proto.v1.RemotePod.properties:type_name -> proto.v1.LinkProperties
	3,  // 5: proto.v1.Local.Get:input_type -> proto.v1.PodQuery
	0,  // 6: proto.v1.Local.SetAlive:input_type -> proto.v1.Pod
	4,  // 7: proto.v1.Local.AddLinks:input_type -> proto.v1.LinksBatchQuery
	4,  // 8: proto.v1.Local.DelLinks:input_type -> proto.v1.LinksBatchQuery
	4,  // 9: proto.v1.Local.UpdateLinks:input_type -> proto.v1.LinksBatchQuery
	5,  // 10: proto.v1.Local.SetupPod:input_type -> proto.v1.SetupPodQuery
	3,  // 11: proto.v1.Local.DestroyPod:input_type -> proto.v1.PodQuery
	8,  // 12: proto.v1.Local.GRPCWireExists:input_type -> proto.v1.WireDef
	8,  // 13: proto.v1.Local.AddGRPCWireLocal:input_type -> proto.v1.WireDef
	8,  // 14: proto.v1.Local.RemGRPCWire:input_type -> proto.v1.WireDef
	11, // 15: proto.v1.Local.GenerateNodeInterfaceName:input_type -> proto.v1.GenerateNodeInterfaceNameRequest
	7,  // 16: proto.v1.Remote.Update:input_type -> proto.v1.RemotePod
	8,  // 17: proto.v1.Remote.AddGRPCWireRemote:input_type -> proto.v1.WireDef
	10, // 18: proto.v1.WireProtocol.SendToOnce:input_type -> proto.v1.Packet
	10, // 19: proto.v1.WireProtocol.SendToStream:input_type -> proto.v1.Packet
	0,  // 20: proto.v1.Local.Get:output_type -> proto.v1.Pod
	6,  // 21: proto.v1.Local.SetAlive:output_type -> proto.v1.BoolResponse
	6,  // 22: proto.v1.Local.AddLinks:output_type -> proto.v1.BoolResponse
	6,  // 23: proto.v1.Local.DelLinks:output_type -> proto.v1.BoolResponse
	6,  // 24: proto.v1.Local.UpdateLinks:output_type -> proto.v1.BoolResponse
	6,  // 25: proto.v1.Local.SetupPod:output_type -> proto.v1.BoolResponse
	6,  // 26: proto.v1.Local.DestroyPod:output_type -> proto.v1.BoolResponse
	9,  // 27: proto.v1.Local.GRPCWireExists:output_type -> proto.v1.WireCreateResponse
	6,  // 28: proto.v1.Local.AddGRPCWireLocal:output_type -> proto.v1.BoolResponse
	6,  // 29: proto.v1.Local.RemGRPCWire:output_type -> proto.v1.BoolResponse
	12, // 30: proto.v1.Local.GenerateNodeInterfaceName:output_type -> proto.v1.GenerateNodeInterfaceNameResponse
	6,  // 31: proto.v1.Remote.Update:output_type -> proto.v1.BoolResponse
	9,  // 32: proto.v1.Remote.AddGRPCWireRemote:output_type -> proto.v1.WireCreateResponse
	6,  // 33: proto.v1.WireProtocol.SendToOnce:output_type -> proto.v1.BoolResponse
	6,  // 34: proto.v1.WireProtocol.SendToStream:output_type -> proto.v1.BoolResponse
	20, // [20:35] is the sub-list for method output_type
	5,  // [5:20] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_proto_v1_kube_dtn_proto_init() }
func file_proto_v1_kube_dtn_proto_init() {
	if File_proto_v1_kube_dtn_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_v1_kube_dtn_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_kube_dtn_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Link); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_kube_dtn_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkProperties); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_kube_dtn_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PodQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_kube_dtn_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinksBatchQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_kube_dtn_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetupPodQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_kube_dtn_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoolResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_kube_dtn_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemotePod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_kube_dtn_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WireDef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_kube_dtn_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WireCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_kube_dtn_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Packet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_kube_dtn_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateNodeInterfaceNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_kube_dtn_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateNodeInterfaceNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_v1_kube_dtn_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_proto_v1_kube_dtn_proto_goTypes,
		DependencyIndexes: file_proto_v1_kube_dtn_proto_depIdxs,
		MessageInfos:      file_proto_v1_kube_dtn_proto_msgTypes,
	}.Build()
	File_proto_v1_kube_dtn_proto = out.File
	file_proto_v1_kube_dtn_proto_rawDesc = nil
	file_proto_v1_kube_dtn_proto_goTypes = nil
	file_proto_v1_kube_dtn_proto_depIdxs = nil
}
